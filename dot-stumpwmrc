;; -*- mode: lisp -*-

(in-package :stumpwm)

(setf *colors* (list "#1C2028"      ; 0 black
                     "#BF616A"      ; 1 red
                     "#A3BE8C"      ; 2 green
                     "#EBCB8B"      ; 3 yellow
                     "#5E81AC"      ; 4 blue
                     "#B48EAD"      ; 5 magenta
                     "#8FBCBB"      ; 6 cyan
                     "#ECEFF4"))    ; 7 white


;; control-t is the default, use control-apostrophe instead
(set-prefix-key (kbd "C-'"))

(defcommand google-chrome () ()
  (run-or-raise "google-chrome-stable  --password-store=gnome --force-device-scale-factor=1.5"
		'(:class "Google-chrome")))

(defcommand gnome-terminal () ()
  (run-or-raise "gnome-terminal"
				'(:class "Gnome-terminal")))

(defcommand terminator () ()
  (run-or-raise "terminator"
		'(:class "Terminator")))

(defcommand slack () ()
  (run-or-raise "slack  --force-device-scale-factor=1.5"
				'(:class "Slack")))

(defcommand emacs () ()
  (run-or-raise "emacsclient -nc "
				'(:class "Emacs")))

(define-key *root-map* (kbd "w") "google-chrome")
(define-key *root-map* (kbd "c") "terminator")
(define-key *root-map* (kbd "s") "slack")
(define-key *root-map* (kbd "e") "emacs")

(define-key *root-map* (kbd "n") "move-focus down")
(define-key *root-map* (kbd "p") "move-focus up")
(define-key *root-map* (kbd "b") "move-focus left")
(define-key *root-map* (kbd "f") "move-focus right")
(define-key *root-map* (kbd "N") "move-window down")
(define-key *root-map* (kbd "P") "move-window up")
(define-key *root-map* (kbd "B") "move-window left")
(define-key *root-map* (kbd "F") "move-window right")
(define-key *root-map* (kbd "|") "hsplit")
(define-key *root-map* (kbd "-") "vsplit")

; (toggle-mode-line (current-screen) (current-head))

(setf *screen-mode-line-format* 
      '("<%n> %W^> "
 	"%C - " 
	(:eval (time-format "%m/%d/%Y %l:%M%p"))))

(setf *mouse-focus-policy* :click)

(setf *input-window-gravity* :center
      *message-window-gravity* :center
      *mouse-focus-policy* :click
      *mode-line-foreground-color* "RoyalBlue"
      )


(load-module "swm-gaps")
(load-module "ttf-fonts")
(load-module "notifications")
(load-module "cpu")


;; Inner gaps run along all the 4 borders of a frame
(setf swm-gaps:*inner-gaps-size* 10)
;; Outer gaps add more padding to the outermost borders
;; (touching the screen border)
(setf swm-gaps:*outer-gaps-size* 20)
(swm-gaps:toggle-gaps)

(xft:cache-fonts)

(set-font (make-instance 'xft:font :family "Hack" :subfamily "Regular" :size 16))

;; Load swank.
;; *prefix-key* ; swank will kick this off
(load "/home/troden/.emacs.d/elpa/slime-20200414.1444/swank-loader.lisp")
(swank-loader:init)
(defcommand swank () ()
  (swank:create-server :port 4005
                       :style swank:*communication-style*
                       :dont-close t)
  (echo-string (current-screen) 
			   "Starting swank. M-x slime-connect RET RET, then (in-package stumpwm)."))
(swank)

(run-shell-command "polybar example --reload")
